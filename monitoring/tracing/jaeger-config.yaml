# Jaeger Distributed Tracing Configuration for SQL Studio
# Provides end-to-end request tracing across microservices

apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: monitoring
data:
  sampling-strategy.json: |
    {
      "service_strategies": [
        {
          "service": "sql-studio-backend",
          "type": "probabilistic",
          "param": 0.01
        }
      ],
      "default_strategy": {
        "type": "probabilistic",
        "param": 0.01
      }
    }

---
# Jaeger All-in-One Deployment (for development/small deployments)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.42
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "elasticsearch"  # Use memory for testing
        - name: ES_SERVER_URLS
          value: "http://elasticsearch:9200"
        - name: ES_INDEX_PREFIX
          value: "jaeger"
        ports:
        - containerPort: 5775
          protocol: UDP
          name: zk-compact-trft
        - containerPort: 6831
          protocol: UDP
          name: jg-compact-trft
        - containerPort: 6832
          protocol: UDP
          name: jg-binary-trft
        - containerPort: 5778
          protocol: TCP
          name: config-rest
        - containerPort: 16686
          protocol: TCP
          name: query
        - containerPort: 14268
          protocol: TCP
          name: collector
        - containerPort: 14250
          protocol: TCP
          name: grpc
        - containerPort: 9411
          protocol: TCP
          name: zipkin
        - containerPort: 4317
          protocol: TCP
          name: otlp-grpc
        - containerPort: 4318
          protocol: TCP
          name: otlp-http
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            memory: 512Mi
            cpu: 200m
        volumeMounts:
        - name: config
          mountPath: /etc/jaeger
      volumes:
      - name: config
        configMap:
          name: jaeger-config

---
# Jaeger Query Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: monitoring
  labels:
    app: jaeger
spec:
  ports:
  - name: query-http
    port: 16686
    protocol: TCP
    targetPort: 16686
  selector:
    app: jaeger
  type: ClusterIP

---
# Jaeger Collector Service
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: monitoring
  labels:
    app: jaeger
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: 14267
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  - name: otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  selector:
    app: jaeger
  type: ClusterIP

---
# Jaeger Agent Service (for sidecar deployment)
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: monitoring
  labels:
    app: jaeger
spec:
  ports:
  - name: agent-zipkin-thrift
    port: 5775
    protocol: UDP
    targetPort: 5775
  - name: agent-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-configs
    port: 5778
    protocol: TCP
    targetPort: 5778
  clusterIP: None
  selector:
    app: jaeger

---
# ServiceMonitor for Prometheus to scrape Jaeger metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  endpoints:
  - port: query-http
    path: /metrics

---
# Ingress for Jaeger UI (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: jaeger-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Jaeger UI - Authentication Required"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jaeger.sqlstudio.example.com
    secretName: jaeger-tls
  rules:
  - host: jaeger.sqlstudio.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686

---
# Production Jaeger Configuration (separate components for scalability)
# Uncomment for production deployment

# # Jaeger Collector
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: jaeger-collector
#   namespace: monitoring
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: jaeger
#       component: collector
#   template:
#     metadata:
#       labels:
#         app: jaeger
#         component: collector
#     spec:
#       containers:
#       - name: jaeger-collector
#         image: jaegertracing/jaeger-collector:1.42
#         env:
#         - name: SPAN_STORAGE_TYPE
#           value: elasticsearch
#         - name: ES_SERVER_URLS
#           value: "http://elasticsearch:9200"
#         ports:
#         - containerPort: 14267
#         - containerPort: 14268
#         - containerPort: 14250
#         - containerPort: 9411
#         resources:
#           limits:
#             memory: 2Gi
#             cpu: 1
#           requests:
#             memory: 1Gi
#             cpu: 500m

# # Jaeger Query
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: jaeger-query
#   namespace: monitoring
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: jaeger
#       component: query
#   template:
#     metadata:
#       labels:
#         app: jaeger
#         component: query
#     spec:
#       containers:
#       - name: jaeger-query
#         image: jaegertracing/jaeger-query:1.42
#         env:
#         - name: SPAN_STORAGE_TYPE
#           value: elasticsearch
#         - name: ES_SERVER_URLS
#           value: "http://elasticsearch:9200"
#         ports:
#         - containerPort: 16686
#         resources:
#           limits:
#             memory: 1Gi
#             cpu: 500m
#           requests:
#             memory: 512Mi
#             cpu: 250m

# # Jaeger Agent (DaemonSet)
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: jaeger-agent
#   namespace: monitoring
# spec:
#   selector:
#     matchLabels:
#       app: jaeger
#       component: agent
#   template:
#     metadata:
#       labels:
#         app: jaeger
#         component: agent
#     spec:
#       containers:
#       - name: jaeger-agent
#         image: jaegertracing/jaeger-agent:1.42
#         args:
#         - --reporter.grpc.host-port=jaeger-collector:14250
#         ports:
#         - containerPort: 5775
#           protocol: UDP
#         - containerPort: 6831
#           protocol: UDP
#         - containerPort: 6832
#           protocol: UDP
#         - containerPort: 5778
#           protocol: TCP
#         resources:
#           limits:
#             memory: 128Mi
#             cpu: 100m
#           requests:
#             memory: 64Mi
#             cpu: 50m
