# ===================================================================
# SQL Studio Backend - Environment Configuration Template
# ===================================================================
# Copy this file to .env.development for local development
# Copy this file to .env.production for production deployment
# ===================================================================

# -------------------------------------------------------------------
# Environment
# -------------------------------------------------------------------
# Environment name: development, staging, production
ENVIRONMENT=development

# -------------------------------------------------------------------
# Server Configuration
# -------------------------------------------------------------------
# HTTP server port (REST API, gRPC-Gateway)
SERVER_HTTP_PORT=8080

# gRPC server port
SERVER_GRPC_PORT=9090

# Metrics server port (Prometheus)
SERVER_METRICS_PORT=9100

# Server host (0.0.0.0 for all interfaces, localhost for local only)
SERVER_HOST=0.0.0.0

# -------------------------------------------------------------------
# Database - Turso/libSQL Configuration
# -------------------------------------------------------------------
# For local development with SQLite:
#   TURSO_URL=file:./data/development.db
#
# For remote Turso database:
#   TURSO_URL=libsql://your-database-your-org.turso.io
#
# The libSQL driver supports both seamlessly!
TURSO_URL=file:./data/development.db

# Turso auth token (only needed for remote Turso databases)
# Leave empty for local SQLite files
# For production, get this from: turso db tokens create <db-name>
TURSO_AUTH_TOKEN=

# Maximum database connections
TURSO_MAX_CONNECTIONS=25

# -------------------------------------------------------------------
# Authentication & Security
# -------------------------------------------------------------------
# JWT secret key (MUST be changed in production!)
# Generate with: openssl rand -base64 64
JWT_SECRET=change-me-in-production-use-64-char-minimum-secret-key-here

# JWT token expiration (e.g., 24h, 7d, 168h)
JWT_EXPIRATION=24h

# JWT refresh token expiration
JWT_REFRESH_EXPIRATION=168h

# Bcrypt cost (4-31, higher is more secure but slower)
# Development: 10, Production: 12-14
BCRYPT_COST=10

# Session timeout
SESSION_TIMEOUT=24h

# Max login attempts before lockout
MAX_LOGIN_ATTEMPTS=5

# Account lockout duration after max attempts
LOCKOUT_DURATION=15m

# -------------------------------------------------------------------
# Email Service Configuration
# -------------------------------------------------------------------
# Email provider: resend, smtp, mock
# Use "mock" for local development (logs to console)
EMAIL_PROVIDER=mock

# Resend API key (get from https://resend.com/api-keys)
RESEND_API_KEY=

# From email address
RESEND_FROM_EMAIL=noreply@sqlstudio.io

# From name
RESEND_FROM_NAME=SQL Studio

# Base URL for email links (used in verification/reset emails)
EMAIL_BASE_URL=http://localhost:3000

# -------------------------------------------------------------------
# Logging Configuration
# -------------------------------------------------------------------
# Log level: trace, debug, info, warn, error, fatal, panic
LOG_LEVEL=debug

# Log format: json, text
LOG_FORMAT=text

# Log output: stdout, file
LOG_OUTPUT=stdout

# Log file path (only used if LOG_OUTPUT=file)
LOG_FILE=./logs/app.log

# -------------------------------------------------------------------
# Sync Service Configuration
# -------------------------------------------------------------------
# Enable cloud sync features
SYNC_ENABLED=true

# Maximum upload size in bytes (10MB default)
SYNC_MAX_UPLOAD_SIZE=10485760

# Conflict resolution strategy: last_write_wins, keep_both, user_choice
SYNC_CONFLICT_STRATEGY=last_write_wins

# Data retention in days
SYNC_RETENTION_DAYS=30

# Maximum history items to keep
SYNC_MAX_HISTORY_ITEMS=1000

# Enable credential sanitization
SYNC_ENABLE_SANITIZATION=true

# Rate limit (requests per minute)
SYNC_RATE_LIMIT_RPM=10

# -------------------------------------------------------------------
# CORS & Security
# -------------------------------------------------------------------
# Enable CORS
CORS_ENABLED=true

# CORS allowed origins (comma-separated)
# Use "*" for development, specific origins for production
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_RPS=100
RATE_LIMIT_BURST=200

# -------------------------------------------------------------------
# Redis Configuration (Optional - for session storage)
# -------------------------------------------------------------------
# Enable Redis (false for local development)
REDIS_ENABLED=false
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0

# -------------------------------------------------------------------
# Feature Flags
# -------------------------------------------------------------------
# Enable metrics collection
METRICS_ENABLED=true

# Enable TLS (false for local development)
TLS_ENABLED=false
