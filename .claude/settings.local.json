{
  "permissions": {
    "allow": [
      "Bash(find /Users/jacob/projects/amplifier/ai_working/howlerops/backend-go -name \"*_test.go\" -type f -exec wc -l {} +)",
      "Bash(for pkg in internal/middleware internal/rag internal/ai pkg/database)",
      "Bash(do echo \"=== $pkg ===\")",
      "Bash(done)",
      "Bash(npm run typecheck)",
      "Bash(wails dev:*)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(npm run test:*)",
      "Bash(go build:*)",
      "Bash(go vet:*)",
      "Bash(npx tsc:*)",
      "Bash(chmod:*)",
      "Bash(go mod:*)",
      "Bash(bash:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(npm run test:run:*)",
      "Bash(for f in prod-readiness-check.sh setup-secrets.sh verify-deployment.sh)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(ls:*)",
      "Bash(test:*)",
      "Bash(make:*)",
      "Read(//private/tmp/**)",
      "Bash(ENVIRONMENT=development go run:*)",
      "Bash(env)",
      "Bash(unset LOG_FORMAT)",
      "Bash(unset LOG_OUTPUT)",
      "Bash(ENVIRONMENT=development LOG_LEVEL=debug LOG_FORMAT=text LOG_OUTPUT=stdout TURSO_URL=\"file:./data/development.db\" JWT_SECRET=\"dev-only-secret-key-change-me-in-production-minimum-32-chars-required\" go run:*)",
      "Bash(timeout 15 make dev)",
      "Bash(lsof:*)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(./install.sh:*)",
      "Bash(/Users/jacob_1/projects/sql-studio/scripts/test-install.sh:*)",
      "Bash(/Users/jacob_1/projects/sql-studio/install.sh:*)",
      "Bash(go test:*)",
      "Bash(./build/sqlstudio:*)",
      "Bash(./build/sql-studio-backend:*)",
      "Bash(cat:*)",
      "Bash(./scripts/test-install.sh:*)",
      "Bash(pkill:*)",
      "Bash(go get:*)",
      "Bash(go tool cover:*)",
      "Bash(go run:*)",
      "Bash(go fmt:*)",
      "Bash(npm test:*)",
      "Bash(wails generate module:*)",
      "Bash(go list:*)",
      "Bash(go doc:*)",
      "Bash(npm run type-check:*)",
      "Read(//tmp/**)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "browser-use",
    "context7",
    "deepwiki",
    "repomix",
    "zen"
  ]
}
