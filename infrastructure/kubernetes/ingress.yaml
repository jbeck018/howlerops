# =============================================================================
# SQL Studio - Ingress Configuration
# =============================================================================
# Production ingress with:
# - TLS/SSL termination
# - Rate limiting
# - CORS handling
# - Path-based routing
# - Security headers
# =============================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sql-studio
  namespace: sql-studio
  labels:
    app: sql-studio
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"

    # TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"

    # HTTPS redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # HSTS (HTTP Strict Transport Security)
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "31536000"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    nginx.ingress.kubernetes.io/limit-rpm: "100"

    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"

    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"

    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://sql-studio.app,https://*.sql-studio.app"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Permissions-Policy: geolocation=(), microphone=(), camera=()";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.sql-studio.app wss://api.sql-studio.app";

    # Connection upgrade for WebSockets
    nginx.ingress.kubernetes.io/websocket-services: "sql-studio-backend"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"

    # Custom error pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"

    # Logging
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"

spec:
  # TLS configuration
  tls:
    - hosts:
        - sql-studio.app
        - api.sql-studio.app
        - www.sql-studio.app
      secretName: sql-studio-tls

  # Routing rules
  rules:
    # API subdomain
    - host: api.sql-studio.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sql-studio-backend
                port:
                  number: 8500

    # Main domain (frontend)
    - host: sql-studio.app
      http:
        paths:
          # API proxy
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: sql-studio-backend
                port:
                  number: 8500

          # Health endpoint (backend)
          - path: /health
            pathType: Exact
            backend:
              service:
                name: sql-studio-backend
                port:
                  number: 8500

          # Frontend (everything else)
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sql-studio-frontend
                port:
                  number: 80

    # WWW redirect
    - host: www.sql-studio.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sql-studio-frontend
                port:
                  number: 80

---
# =============================================================================
# Staging Ingress (Optional)
# =============================================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sql-studio-staging
  namespace: sql-studio
  labels:
    app: sql-studio
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Basic auth for staging (optional)
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: staging-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "SQL Studio Staging"

spec:
  tls:
    - hosts:
        - staging.sql-studio.app
        - staging-api.sql-studio.app
      secretName: sql-studio-staging-tls

  rules:
    - host: staging.sql-studio.app
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: sql-studio-backend
                port:
                  number: 8500
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sql-studio-frontend
                port:
                  number: 80

    - host: staging-api.sql-studio.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sql-studio-backend
                port:
                  number: 8500
