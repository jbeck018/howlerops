version: '3.8'

services:
  # Go Backend with gRPC/Protobuf
  backend-go:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    ports:
      - "9500:9500"  # gRPC port
      - "8500:8500"  # HTTP Gateway port
      - "8081:8081"  # WebSocket port
      - "9100:9100"  # Metrics port
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8500
      - SERVER_GRPC_PORT=9500
      - SERVER_HTTP_PORT=8500
      - DATABASE_HOST=postgres
      - DATABASE_PORT=15432
      - DATABASE_NAME=sqlstudio
      - DATABASE_USER=sqlstudio
      - DATABASE_PASSWORD=sqlstudio
      - REDIS_HOST=redis
      - REDIS_PORT=16379
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - redis
    networks:
      - sql-studio-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: sqlstudio
      POSTGRES_PASSWORD: sqlstudio
      POSTGRES_DB: sqlstudio
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sql-studio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sqlstudio -d sqlstudio"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sql-studio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (if needed)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8580:80"
  #   environment:
  #     - VITE_GRPC_URL=http://localhost:8500
  #     - VITE_WS_URL=ws://localhost:8081
  #   depends_on:
  #     - backend-go
  #   networks:
  #     - sql-studio-network

networks:
  sql-studio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  postgres-data:
  redis-data: